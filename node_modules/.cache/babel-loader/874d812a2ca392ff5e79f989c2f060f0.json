{"remainingRequest":"/Users/tina/seven/vue_test/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/tina/seven/vue_test/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/tina/seven/vue_test/src/store/modules/settings.js","dependencies":[{"path":"/Users/tina/seven/vue_test/src/store/modules/settings.js","mtime":1572427782308},{"path":"/Users/tina/seven/vue_test/node_modules/cache-loader/dist/cjs.js","mtime":1566786504464},{"path":"/Users/tina/seven/vue_test/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1566786501591},{"path":"/Users/tina/seven/vue_test/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1569153234749}],"contextDependencies":[],"result":["// import variables from '@/styles/element-variables.scss'\n// import defaultSettings from '@/settings'\n// const { showSettings, tagsView, fixedHeader, sidebarLogo } = defaultSettings\n// const state = {\n//   theme: variables.theme,\n//   showSettings: showSettings,\n//   tagsView: tagsView,\n//   fixedHeader: fixedHeader,\n//   sidebarLogo: sidebarLogo\n// }\n// const mutations = {\n//   CHANGE_SETTING: (state, { key, value }) => {\n//     if (state.hasOwnProperty(key)) {\n//       state[key] = value\n//     }\n//   }\n// }\n// const actions = {\n//   changeSetting({ commit }, data) {\n//     commit('CHANGE_SETTING', data)\n//   }\n// }\n// export default {\n//   namespaced: true,\n//   state,\n//   mutations,\n//   actions\n// }",{"version":3,"sources":["/Users/tina/seven/vue_test/src/store/modules/settings.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import variables from '@/styles/element-variables.scss'\n// import defaultSettings from '@/settings'\n\n// const { showSettings, tagsView, fixedHeader, sidebarLogo } = defaultSettings\n\n// const state = {\n//   theme: variables.theme,\n//   showSettings: showSettings,\n//   tagsView: tagsView,\n//   fixedHeader: fixedHeader,\n//   sidebarLogo: sidebarLogo\n// }\n\n// const mutations = {\n//   CHANGE_SETTING: (state, { key, value }) => {\n//     if (state.hasOwnProperty(key)) {\n//       state[key] = value\n//     }\n//   }\n// }\n\n// const actions = {\n//   changeSetting({ commit }, data) {\n//     commit('CHANGE_SETTING', data)\n//   }\n// }\n\n// export default {\n//   namespaced: true,\n//   state,\n//   mutations,\n//   actions\n// }\n\n"]}]}
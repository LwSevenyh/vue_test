{"remainingRequest":"/Users/tina/seven/vue_test/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/tina/seven/vue_test/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/tina/seven/vue_test/src/store/modules/user.js","dependencies":[{"path":"/Users/tina/seven/vue_test/src/store/modules/user.js","mtime":1572427769969},{"path":"/Users/tina/seven/vue_test/node_modules/cache-loader/dist/cjs.js","mtime":1566786504464},{"path":"/Users/tina/seven/vue_test/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1566786501591},{"path":"/Users/tina/seven/vue_test/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1569153234749}],"contextDependencies":[],"result":["// import { login, logout, getInfo } from '@/api/user'\n// import { getToken, setToken, removeToken } from '@/utils/auth'\n// import router, { resetRouter } from '@/router'\n// const state = {\n//   token: getToken(),\n//   name: '',\n//   avatar: '',\n//   introduction: '',\n//   roles: []\n// }\n// const mutations = {\n//   SET_TOKEN: (state, token) => {\n//     state.token = token\n//   },\n//   SET_INTRODUCTION: (state, introduction) => {\n//     state.introduction = introduction\n//   },\n//   SET_NAME: (state, name) => {\n//     state.name = name\n//   },\n//   SET_AVATAR: (state, avatar) => {\n//     state.avatar = avatar\n//   },\n//   SET_ROLES: (state, roles) => {\n//     state.roles = roles\n//   }\n// }\n// const actions = {\n//   // user login\n//   login({ commit }, userInfo) {\n//     const { username, password } = userInfo\n//     return new Promise((resolve, reject) => {\n//       login({ username: username.trim(), password: password }).then(response => {\n//         const { data } = response\n//         commit('SET_TOKEN', data.token)\n//         setToken(data.token)\n//         resolve()\n//       }).catch(error => {\n//         reject(error)\n//       })\n//     })\n//   },\n//   // get user info\n//   getInfo({ commit, state }) {\n//     return new Promise((resolve, reject) => {\n//       getInfo(state.token).then(response => {\n//         const { data } = response\n//         if (!data) {\n//           reject('Verification failed, please Login again.')\n//         }\n//         const { roles, name, avatar, introduction } = data\n//         // roles must be a non-empty array\n//         if (!roles || roles.length <= 0) {\n//           reject('getInfo: roles must be a non-null array!')\n//         }\n//         commit('SET_ROLES', roles)\n//         commit('SET_NAME', name)\n//         commit('SET_AVATAR', avatar)\n//         commit('SET_INTRODUCTION', introduction)\n//         resolve(data)\n//       }).catch(error => {\n//         reject(error)\n//       })\n//     })\n//   },\n//   // user logout\n//   logout({ commit, state, dispatch }) {\n//     return new Promise((resolve, reject) => {\n//       logout(state.token).then(() => {\n//         commit('SET_TOKEN', '')\n//         commit('SET_ROLES', [])\n//         removeToken()\n//         resetRouter()\n//         // reset visited views and cached views\n//         // to fixed https://github.com/PanJiaChen/vue-element-admin/issues/2485\n//         dispatch('tagsView/delAllViews', null, { root: true })\n//         resolve()\n//       }).catch(error => {\n//         reject(error)\n//       })\n//     })\n//   },\n//   // remove token\n//   resetToken({ commit }) {\n//     return new Promise(resolve => {\n//       commit('SET_TOKEN', '')\n//       commit('SET_ROLES', [])\n//       removeToken()\n//       resolve()\n//     })\n//   },\n//   // dynamically modify permissions\n//   changeRoles({ commit, dispatch }, role) {\n//     return new Promise(async resolve => {\n//       const token = role + '-token'\n//       commit('SET_TOKEN', token)\n//       setToken(token)\n//       const { roles } = await dispatch('getInfo')\n//       resetRouter()\n//       // generate accessible routes map based on roles\n//       const accessRoutes = await dispatch('permission/generateRoutes', roles, { root: true })\n//       // dynamically add accessible routes\n//       router.addRoutes(accessRoutes)\n//       // reset visited views and cached views\n//       dispatch('tagsView/delAllViews', null, { root: true })\n//       resolve()\n//     })\n//   }\n// }\n// export default {\n//   namespaced: true,\n//   state,\n//   mutations,\n//   actions\n// }",{"version":3,"sources":["/Users/tina/seven/vue_test/src/store/modules/user.js"],"names":[],"mappingssourcesContent":["// import { login, logout, getInfo } from '@/api/user'\n// import { getToken, setToken, removeToken } from '@/utils/auth'\n// import router, { resetRouter } from '@/router'\n\n// const state = {\n//   token: getToken(),\n//   name: '',\n//   avatar: '',\n//   introduction: '',\n//   roles: []\n// }\n\n// const mutations = {\n//   SET_TOKEN: (state, token) => {\n//     state.token = token\n//   },\n//   SET_INTRODUCTION: (state, introduction) => {\n//     state.introduction = introduction\n//   },\n//   SET_NAME: (state, name) => {\n//     state.name = name\n//   },\n//   SET_AVATAR: (state, avatar) => {\n//     state.avatar = avatar\n//   },\n//   SET_ROLES: (state, roles) => {\n//     state.roles = roles\n//   }\n// }\n\n// const actions = {\n//   // user login\n//   login({ commit }, userInfo) {\n//     const { username, password } = userInfo\n//     return new Promise((resolve, reject) => {\n//       login({ username: username.trim(), password: password }).then(response => {\n//         const { data } = response\n//         commit('SET_TOKEN', data.token)\n//         setToken(data.token)\n//         resolve()\n//       }).catch(error => {\n//         reject(error)\n//       })\n//     })\n//   },\n\n//   // get user info\n//   getInfo({ commit, state }) {\n//     return new Promise((resolve, reject) => {\n//       getInfo(state.token).then(response => {\n//         const { data } = response\n\n//         if (!data) {\n//           reject('Verification failed, please Login again.')\n//         }\n\n//         const { roles, name, avatar, introduction } = data\n\n//         // roles must be a non-empty array\n//         if (!roles || roles.length <= 0) {\n//           reject('getInfo: roles must be a non-null array!')\n//         }\n\n//         commit('SET_ROLES', roles)\n//         commit('SET_NAME', name)\n//         commit('SET_AVATAR', avatar)\n//         commit('SET_INTRODUCTION', introduction)\n//         resolve(data)\n//       }).catch(error => {\n//         reject(error)\n//       })\n//     })\n//   },\n\n//   // user logout\n//   logout({ commit, state, dispatch }) {\n//     return new Promise((resolve, reject) => {\n//       logout(state.token).then(() => {\n//         commit('SET_TOKEN', '')\n//         commit('SET_ROLES', [])\n//         removeToken()\n//         resetRouter()\n\n//         // reset visited views and cached views\n//         // to fixed https://github.com/PanJiaChen/vue-element-admin/issues/2485\n//         dispatch('tagsView/delAllViews', null, { root: true })\n\n//         resolve()\n//       }).catch(error => {\n//         reject(error)\n//       })\n//     })\n//   },\n\n//   // remove token\n//   resetToken({ commit }) {\n//     return new Promise(resolve => {\n//       commit('SET_TOKEN', '')\n//       commit('SET_ROLES', [])\n//       removeToken()\n//       resolve()\n//     })\n//   },\n\n//   // dynamically modify permissions\n//   changeRoles({ commit, dispatch }, role) {\n//     return new Promise(async resolve => {\n//       const token = role + '-token'\n\n//       commit('SET_TOKEN', token)\n//       setToken(token)\n\n//       const { roles } = await dispatch('getInfo')\n\n//       resetRouter()\n\n//       // generate accessible routes map based on roles\n//       const accessRoutes = await dispatch('permission/generateRoutes', roles, { root: true })\n\n//       // dynamically add accessible routes\n//       router.addRoutes(accessRoutes)\n\n//       // reset visited views and cached views\n//       dispatch('tagsView/delAllViews', null, { root: true })\n\n//       resolve()\n//     })\n//   }\n// }\n\n// export default {\n//   namespaced: true,\n//   state,\n//   mutations,\n//   actions\n// }\n"]}]}
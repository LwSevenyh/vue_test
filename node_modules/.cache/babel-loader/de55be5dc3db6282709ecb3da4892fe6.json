{"remainingRequest":"/Users/tina/seven/vue_test/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/tina/seven/vue_test/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/tina/seven/vue_test/src/store/modules/tagsView.js","dependencies":[{"path":"/Users/tina/seven/vue_test/src/store/modules/tagsView.js","mtime":1572427723483},{"path":"/Users/tina/seven/vue_test/node_modules/cache-loader/dist/cjs.js","mtime":1566786504464},{"path":"/Users/tina/seven/vue_test/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1566786501591},{"path":"/Users/tina/seven/vue_test/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1569153234749}],"contextDependencies":[],"result":["const state = {\n  visitedViews: [],\n  cachedViews: []\n};\nconst mutations = {\n  ADD_VISITED_VIEW: (state, view) => {\n    if (state.visitedViews.some(v => v.path === view.path)) return;\n    state.visitedViews.push(Object.assign({}, view, {\n      title: view.meta.title || 'no-name'\n    }));\n  },\n  ADD_CACHED_VIEW: (state, view) => {\n    if (state.cachedViews.includes(view.name)) return;\n\n    if (!view.meta.noCache) {\n      state.cachedViews.push(view.name);\n    }\n  },\n  DEL_VISITED_VIEW: (state, view) => {\n    for (const [i, v] of state.visitedViews.entries()) {\n      if (v.path === view.path) {\n        state.visitedViews.splice(i, 1);\n        break;\n      }\n    }\n  },\n  DEL_CACHED_VIEW: (state, view) => {\n    const index = state.cachedViews.indexOf(view.name);\n    index > -1 && state.cachedViews.splice(index, 1);\n  },\n  DEL_OTHERS_VISITED_VIEWS: (state, view) => {\n    state.visitedViews = state.visitedViews.filter(v => {\n      return v.meta.affix || v.path === view.path;\n    });\n  },\n  DEL_OTHERS_CACHED_VIEWS: (state, view) => {\n    const index = state.cachedViews.indexOf(view.name);\n\n    if (index > -1) {\n      state.cachedViews = state.cachedViews.slice(index, index + 1);\n    } else {\n      // if index = -1, there is no cached tags\n      state.cachedViews = [];\n    }\n  },\n  DEL_ALL_VISITED_VIEWS: state => {\n    // keep affix tags\n    const affixTags = state.visitedViews.filter(tag => tag.meta.affix);\n    state.visitedViews = affixTags;\n  },\n  DEL_ALL_CACHED_VIEWS: state => {\n    state.cachedViews = [];\n  },\n  UPDATE_VISITED_VIEW: (state, view) => {\n    for (let v of state.visitedViews) {\n      if (v.path === view.path) {\n        v = Object.assign(v, view);\n        break;\n      }\n    }\n  }\n};\nconst actions = {\n  addView({\n    dispatch\n  }, view) {\n    dispatch('addVisitedView', view);\n    dispatch('addCachedView', view);\n  },\n\n  addVisitedView({\n    commit\n  }, view) {\n    commit('ADD_VISITED_VIEW', view);\n  },\n\n  addCachedView({\n    commit\n  }, view) {\n    commit('ADD_CACHED_VIEW', view);\n  },\n\n  delView({\n    dispatch,\n    state\n  }, view) {\n    return new Promise(resolve => {\n      dispatch('delVisitedView', view);\n      dispatch('delCachedView', view);\n      resolve({\n        visitedViews: [...state.visitedViews],\n        cachedViews: [...state.cachedViews]\n      });\n    });\n  },\n\n  delVisitedView({\n    commit,\n    state\n  }, view) {\n    return new Promise(resolve => {\n      commit('DEL_VISITED_VIEW', view);\n      resolve([...state.visitedViews]);\n    });\n  },\n\n  delCachedView({\n    commit,\n    state\n  }, view) {\n    return new Promise(resolve => {\n      commit('DEL_CACHED_VIEW', view);\n      resolve([...state.cachedViews]);\n    });\n  },\n\n  delOthersViews({\n    dispatch,\n    state\n  }, view) {\n    return new Promise(resolve => {\n      dispatch('delOthersVisitedViews', view);\n      dispatch('delOthersCachedViews', view);\n      resolve({\n        visitedViews: [...state.visitedViews],\n        cachedViews: [...state.cachedViews]\n      });\n    });\n  },\n\n  delOthersVisitedViews({\n    commit,\n    state\n  }, view) {\n    return new Promise(resolve => {\n      commit('DEL_OTHERS_VISITED_VIEWS', view);\n      resolve([...state.visitedViews]);\n    });\n  },\n\n  delOthersCachedViews({\n    commit,\n    state\n  }, view) {\n    return new Promise(resolve => {\n      commit('DEL_OTHERS_CACHED_VIEWS', view);\n      resolve([...state.cachedViews]);\n    });\n  },\n\n  delAllViews({\n    dispatch,\n    state\n  }, view) {\n    return new Promise(resolve => {\n      dispatch('delAllVisitedViews', view);\n      dispatch('delAllCachedViews', view);\n      resolve({\n        visitedViews: [...state.visitedViews],\n        cachedViews: [...state.cachedViews]\n      });\n    });\n  },\n\n  delAllVisitedViews({\n    commit,\n    state\n  }) {\n    return new Promise(resolve => {\n      commit('DEL_ALL_VISITED_VIEWS');\n      resolve([...state.visitedViews]);\n    });\n  },\n\n  delAllCachedViews({\n    commit,\n    state\n  }) {\n    return new Promise(resolve => {\n      commit('DEL_ALL_CACHED_VIEWS');\n      resolve([...state.cachedViews]);\n    });\n  },\n\n  updateVisitedView({\n    commit\n  }, view) {\n    commit('UPDATE_VISITED_VIEW', view);\n  }\n\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};",{"version":3,"sources":["/Users/tina/seven/vue_test/src/store/modules/tagsView.js"],"names":["state","visitedViews","cachedViews","mutations","ADD_VISITED_VIEW","view","some","v","path","push","Object","assign","title","meta","ADD_CACHED_VIEW","includes","name","noCache","DEL_VISITED_VIEW","i","entries","splice","DEL_CACHED_VIEW","index","indexOf","DEL_OTHERS_VISITED_VIEWS","filter","affix","DEL_OTHERS_CACHED_VIEWS","slice","DEL_ALL_VISITED_VIEWS","affixTags","tag","DEL_ALL_CACHED_VIEWS","UPDATE_VISITED_VIEW","actions","addView","dispatch","addVisitedView","commit","addCachedView","delView","Promise","resolve","delVisitedView","delCachedView","delOthersViews","delOthersVisitedViews","delOthersCachedViews","delAllViews","delAllVisitedViews","delAllCachedViews","updateVisitedView","namespaced"],"mappings":"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","sourcesContent":["const state = {\n  visitedViews: [],\n  cachedViews: []\n}\n\nconst mutations = {\n  ADD_VISITED_VIEW: (state, view) => {\n    if (state.visitedViews.some(v => v.path === view.path)) return\n    state.visitedViews.push(\n      Object.assign({}, view, {\n        title: view.meta.title || 'no-name'\n      })\n    )\n  },\n  ADD_CACHED_VIEW: (state, view) => {\n    if (state.cachedViews.includes(view.name)) return\n    if (!view.meta.noCache) {\n      state.cachedViews.push(view.name)\n    }\n  },\n\n  DEL_VISITED_VIEW: (state, view) => {\n    for (const [i, v] of state.visitedViews.entries()) {\n      if (v.path === view.path) {\n        state.visitedViews.splice(i, 1)\n        break\n      }\n    }\n  },\n  DEL_CACHED_VIEW: (state, view) => {\n    const index = state.cachedViews.indexOf(view.name)\n    index > -1 && state.cachedViews.splice(index, 1)\n  },\n\n  DEL_OTHERS_VISITED_VIEWS: (state, view) => {\n    state.visitedViews = state.visitedViews.filter(v => {\n      return v.meta.affix || v.path === view.path\n    })\n  },\n  DEL_OTHERS_CACHED_VIEWS: (state, view) => {\n    const index = state.cachedViews.indexOf(view.name)\n    if (index > -1) {\n      state.cachedViews = state.cachedViews.slice(index, index + 1)\n    } else {\n      // if index = -1, there is no cached tags\n      state.cachedViews = []\n    }\n  },\n\n  DEL_ALL_VISITED_VIEWS: state => {\n    // keep affix tags\n    const affixTags = state.visitedViews.filter(tag => tag.meta.affix)\n    state.visitedViews = affixTags\n  },\n  DEL_ALL_CACHED_VIEWS: state => {\n    state.cachedViews = []\n  },\n\n  UPDATE_VISITED_VIEW: (state, view) => {\n    for (let v of state.visitedViews) {\n      if (v.path === view.path) {\n        v = Object.assign(v, view)\n        break\n      }\n    }\n  }\n}\n\nconst actions = {\n  addView({ dispatch }, view) {\n    dispatch('addVisitedView', view)\n    dispatch('addCachedView', view)\n  },\n  addVisitedView({ commit }, view) {\n    commit('ADD_VISITED_VIEW', view)\n  },\n  addCachedView({ commit }, view) {\n    commit('ADD_CACHED_VIEW', view)\n  },\n\n  delView({ dispatch, state }, view) {\n    return new Promise(resolve => {\n      dispatch('delVisitedView', view)\n      dispatch('delCachedView', view)\n      resolve({\n        visitedViews: [...state.visitedViews],\n        cachedViews: [...state.cachedViews]\n      })\n    })\n  },\n  delVisitedView({ commit, state }, view) {\n    return new Promise(resolve => {\n      commit('DEL_VISITED_VIEW', view)\n      resolve([...state.visitedViews])\n    })\n  },\n  delCachedView({ commit, state }, view) {\n    return new Promise(resolve => {\n      commit('DEL_CACHED_VIEW', view)\n      resolve([...state.cachedViews])\n    })\n  },\n\n  delOthersViews({ dispatch, state }, view) {\n    return new Promise(resolve => {\n      dispatch('delOthersVisitedViews', view)\n      dispatch('delOthersCachedViews', view)\n      resolve({\n        visitedViews: [...state.visitedViews],\n        cachedViews: [...state.cachedViews]\n      })\n    })\n  },\n  delOthersVisitedViews({ commit, state }, view) {\n    return new Promise(resolve => {\n      commit('DEL_OTHERS_VISITED_VIEWS', view)\n      resolve([...state.visitedViews])\n    })\n  },\n  delOthersCachedViews({ commit, state }, view) {\n    return new Promise(resolve => {\n      commit('DEL_OTHERS_CACHED_VIEWS', view)\n      resolve([...state.cachedViews])\n    })\n  },\n\n  delAllViews({ dispatch, state }, view) {\n    return new Promise(resolve => {\n      dispatch('delAllVisitedViews', view)\n      dispatch('delAllCachedViews', view)\n      resolve({\n        visitedViews: [...state.visitedViews],\n        cachedViews: [...state.cachedViews]\n      })\n    })\n  },\n  delAllVisitedViews({ commit, state }) {\n    return new Promise(resolve => {\n      commit('DEL_ALL_VISITED_VIEWS')\n      resolve([...state.visitedViews])\n    })\n  },\n  delAllCachedViews({ commit, state }) {\n    return new Promise(resolve => {\n      commit('DEL_ALL_CACHED_VIEWS')\n      resolve([...state.cachedViews])\n    })\n  },\n\n  updateVisitedView({ commit }, view) {\n    commit('UPDATE_VISITED_VIEW', view)\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}\n"]}]}
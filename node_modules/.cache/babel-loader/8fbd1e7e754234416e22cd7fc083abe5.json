{"remainingRequest":"/Users/tina/seven/vue_test/node_modules/babel-loader/lib/index.js!/Users/tina/seven/vue_test/node_modules/eslint-loader/index.js??ref--13-0!/Users/tina/seven/vue_test/src/main.js","dependencies":[{"path":"/Users/tina/seven/vue_test/src/main.js","mtime":1572426708037},{"path":"/Users/tina/seven/vue_test/node_modules/cache-loader/dist/cjs.js","mtime":1566786504464},{"path":"/Users/tina/seven/vue_test/node_modules/babel-loader/lib/index.js","mtime":1566786501591},{"path":"/Users/tina/seven/vue_test/node_modules/eslint-loader/index.js","mtime":1569153234749}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Cookies from 'js-cookie'; // import 'normalize.css/normalize.css' // a modern alternative to CSS resets\n// import Element from 'element-ui'\n// import './styles/element-variables.scss'\n// import '@/styles/index.scss' // global css\n\nimport App from './App'; // import store from './store'\n\nimport router from './router'; // import './icons' // icon\n// import './permission' // permission control\n// import './utils/error-log' // error log\n// import * as filters from './filters' // global filters\n\n/**\n * If you don't want to use mock-server\n * you want to use MockJs for mock api\n * you can execute: mockXHR()\n *\n * Currently MockJs will be used in the production environment,\n * please remove it before going online! ! !\n */\n// import { mockXHR } from '../mock'\n// if (process.env.NODE_ENV === 'production') {\n//   mockXHR()\n// }\n\nVue.use(Element, {\n  size: Cookies.get('size') || 'medium' // set element-ui default size\n\n}); // register global utility filters\n// Object.keys(filters).forEach(key => {\n//   Vue.filter(key, filters[key])\n// })\n\nVue.config.productionTip = false;\nnew Vue({\n  el: '#app',\n  router,\n  store,\n  render: h => h(App)\n});",{"version":3,"sources":["/Users/tina/seven/vue_test/src/main.js"],"names":["Vue","Cookies","App","router","use","Element","size","get","config","productionTip","el","store","render","h"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;AAEA;AACA;AAEA;;AAEA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;AACA;AAEA;;AAEA;;;;;;;;AAQA;AACA;AACA;AACA;;AAEAH,GAAG,CAACI,GAAJ,CAAQC,OAAR,EAAiB;AACfC,EAAAA,IAAI,EAAEL,OAAO,CAACM,GAAR,CAAY,MAAZ,KAAuB,QADd,CACuB;;AADvB,CAAjB,E,CAIA;AACA;AACA;AACA;;AAEAP,GAAG,CAACQ,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AAEA,IAAIT,GAAJ,CAAQ;AACNU,EAAAA,EAAE,EAAE,MADE;AAENP,EAAAA,MAFM;AAGNQ,EAAAA,KAHM;AAINC,EAAAA,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACX,GAAD;AAJR,CAAR","sourcesContent":["import Vue from 'vue'\n\nimport Cookies from 'js-cookie'\n\n// import 'normalize.css/normalize.css' // a modern alternative to CSS resets\n\n// import Element from 'element-ui'\n// import './styles/element-variables.scss'\n\n// import '@/styles/index.scss' // global css\n\nimport App from './App'\n// import store from './store'\nimport router from './router'\n\n// import './icons' // icon\n// import './permission' // permission control\n// import './utils/error-log' // error log\n\n// import * as filters from './filters' // global filters\n\n/**\n * If you don't want to use mock-server\n * you want to use MockJs for mock api\n * you can execute: mockXHR()\n *\n * Currently MockJs will be used in the production environment,\n * please remove it before going online! ! !\n */\n// import { mockXHR } from '../mock'\n// if (process.env.NODE_ENV === 'production') {\n//   mockXHR()\n// }\n\nVue.use(Element, {\n  size: Cookies.get('size') || 'medium' // set element-ui default size\n})\n\n// register global utility filters\n// Object.keys(filters).forEach(key => {\n//   Vue.filter(key, filters[key])\n// })\n\nVue.config.productionTip = false\n\nnew Vue({\n  el: '#app',\n  router,\n  store,\n  render: h => h(App)\n})\n"]}]}